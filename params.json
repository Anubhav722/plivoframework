{"name":"Plivoframework","tagline":"Open Source Telephony Application Prototyping Framework","body":"## Plivo RESTXML\r\n\r\nYour application must use Plivo RESTXML to receive and control an incoming call. \r\nSome possible control actions could be: playing a music file while the caller is on hold, \r\nreading out specified text to the caller asking for inputs, dialing and connecting to another number.\r\n\r\n![Plivo RESTXML](https://raw.githubusercontent.com/plivo/plivoframework/gh-pages/images/rest-xml.png)\r\n\r\nHere, Plivo works like an HTTP Client which receives the call and requests your web application for instructions to control the call.\r\n\r\n\r\n## Plivo RESTAPIs\r\n\r\nYour application must use Plivo RESTAPIs to initiate actions; such as making outbound calls, scheduling hang-up of calls, transferring calls etc.\r\n\r\n![Plivo RESTAPIs](https://raw.githubusercontent.com/plivo/plivoframework/gh-pages/images/rest-apis.png)\r\n\r\nHere, Plivo works like an HTTP Server which receives API requests from your web application, and executes the specified action(s).\r\n\r\n\r\n## Plivo Helper Libraries\r\n\r\nThe Plivo Helper Libraries provide a set of helper functions in a variety of programming \r\nlanguages to simplify the process of connecting your web application to Plivo. \r\nThe Helper Library is by no means mandatory to interface with Plivo.\r\n\r\nCurrently, Helper Libraries are available for: \r\n\r\n1. Java\r\n2. PHP\r\n3. Python\r\n4. Ruby","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}